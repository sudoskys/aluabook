--创建布局，用于显示爬取的图片
--由于考虑到学习成本的问题，所以我没有用适配器写图片展示
--用了较简单的循环添加布局
--提示:图片爬虫显示较吃性能，所以本教程可能导致程序闪退。
--由于网站和循环布局原因，所以爬取会比较慢，请耐心等待。
shamrock=
{
  LinearLayout;--线性布局
  Orientation='vertical';--布局方向
  layout_width='fill';--布局宽度
  layout_height='fill';--布局高度
  background='#ffffff';--布局背景颜色(或者图片路径)
  {
    ScrollView;--纵向滚动
    layout_width='fill';--宽
    layout_height='fill';--高
    {
      LinearLayout;--线性布局
      id="壁纸";--绑定ID
      Orientation='vertical';--布局方向
      layout_width='fill';--布局宽度
      layout_height='fill';--布局高度
      background='';--布局背景颜色(或者图片路径)
    };
  };
};
activity.setContentView(loadlayout(shamrock))--将布局添加至窗口
--创建等待窗口提示
dialog3 = ProgressDialog.show(this, "提示", "正在爬取中",false, false)
--将等待窗口美化(设置圆角)
import "android.graphics.drawable.GradientDrawable"
local radiu=25
dialog3.getWindow().setBackgroundDrawable(GradientDrawable().setCornerRadii({radiu,radiu,radiu,radiu,radiu,radiu,radiu,radiu}).setColor(0xffffffff))
--定义爬取链接
url="https://bing.ioliu.cn/"
--Http请求源码
Http.get(url,nil,"utf8",nil,function(状态码,网页源码)
  --等待窗口隐藏
  dialog3.hide()
  --判断状态码，确认网站可访问
  if 状态码==200 then
    --筛选图片链接数据
    图片链接迭代器=网页源码:gmatch('src="(https://h1.ioliu.cn/bing/.-jpg)"')
    --创建图片链接表，用于存储抓取到的图片链接
    图片链接={}
    --迭代抓取到的图片链接
    for i in 图片链接迭代器 do
      --将图片链接存入表中
      table.insert(图片链接,i)
    end
  --遍历图片链接表
    for k,v in pairs(图片链接) do
      --创建布局，用于显示每一张图片
      单张壁纸={
        LinearLayout;--线性布局
        Orientation='vertical';--布局方向
        layout_width='fill';--布局宽度
        layout_height='50%w';--布局高度
        background='';--布局背景颜色(或者图片路径)
        Gravity="center";
        {
          CardView;--卡片控件
          layout_margin='10';--卡片边距
          layout_gravity='center';--重力属性
          Elevation='0';--阴影属性
          layout_width='fill';--卡片宽度
          layout_height='fill';--卡片高度
          radius='20';--卡片圆角
          CardBackgroundColor='';--卡片背景颜色
          {
            ImageView;--图片控件
            id="图片";
            src="";--图片路径
            layout_width='fill';--图片宽度
            layout_height='fill';--图片高度
            layout_gravity='center';--重力属性
          };
        };
      };
      --将布局添加至主布局
      壁纸.addView(loadlayout(单张壁纸))
      --设置在线图片显示
      图片.setImageBitmap(LuaBitmap.getHttpBitmap(v))
    end
   else
    print("无法访问")
  end
end)