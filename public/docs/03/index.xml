<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>03-00 工程笔记 on LUA book</title>
    <link>https://lua.dianas.cyou/docs/03/</link>
    <description>Recent content in 03-00 工程笔记 on LUA book</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language><atom:link href="https://lua.dianas.cyou/docs/03/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>03-01 案例分析01</title>
      <link>https://lua.dianas.cyou/docs/03/0301/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lua.dianas.cyou/docs/03/0301/</guid>
      <description>BiliFanViewer #  From sudoskys  工程源码与在线浏览请见章首页(0节)  工程结构 #  . ├── BiliFanViewer.zip //源代码打包 ├── capsule //字符资源库 │ ├── layout //布局库 │ │ ├── item.aly │ │ └── now.aly │ └── value //变量库 │ ├── color.lua │ └── str.lua ├── core //核心函数库 │ ├── cores.lua │ ├── hotup.lua │ ├── rule.lua │ ├── rule.lua.bak │ └── runs.lua ├── icon.png ├── init.lua // ├── layout.aly //布局文件 ├── libs //包的目录 │ └── android-support-v4.</description>
    </item>
    
    <item>
      <title>03-02 拒绝做糟糕的开发者[*]</title>
      <link>https://lua.dianas.cyou/docs/03/0302/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lua.dianas.cyou/docs/03/0302/</guid>
      <description>From Overdose &amp;amp; sudoskys  https://iflynote.com/h/s/doc/W5zNYAzJvliY4Xbc
题目：如何开发可能成功的作品，拒绝做糟糕的开发者。 #  如果您认为本建议内容与您的认知有冲突，请跳过。
FusionApp这里指FusionApp 2.0 Beta 8.7.2
 一.设计流程 #  界面设计 #  设计风格统一，尽可能使用AndroidX与质感库的内容。 界面尽可能现代。请勿开发粗制滥造的作品。建议您使用Material Design。
文件资源 #  您应使资源文件存放得当，不应使用户等待冗长的动画。应使动画自然流畅（请善用插值器）。
功能设计 #  您应使功能稳定，应遵照用户情况增减功能。功能应围绕明确的主题。 您应使功能简单易用（复杂的功能应配有说明） 您可以或应当收费您耗费大量心血的核心功能，您应维持功能完整可靠。对于他人编写内容，请辨明开源协议！！
三.质量建议 #  您的应用内不应出现过多易触发的漏洞 您的正式版内不应出现未完善的内容 小规模应用不应对大量的内容收费 大规模应用应具有完善的收费系统 您不应时常催促用户购买收费内容或向作者捐赠 您的应用提示语应礼貌得体
四.迭代 #  您的应用迭代速度不应过于频繁！ 频次最好以两周一版本为好。太过频繁的更新会显著降低用户体验。内测的版本请开发完毕后再上线&amp;hellip;. 用户不需要为应用迭代考虑过多
迭代的版本号上调应符合规范（详细请自行查阅搜索引擎） 迭代的内容应列出日志，供用户随时查看，用户享有知情权。
对于正在小范围测试的应用，迭代的内容不应过少 对于大规模被使用的应用，迭代内容不应过大 α（Alpha）版本不应向任何人供应 β（Beta）版本可小范围供部分用户测试
五.相关 #  建议您独立编写协议（即使字数较少，也好于模板）。 您应在用户使用您的应用前告知协议。 您应说明您使用的开源内容，这是社区公约，法庭具有效力.
六.安全 #  您不应出卖用户的隐私。 您不应获取过多用户的隐私。 您不应向他人展示用户的隐私。 您应保证他人不会通过您的应用获取他人的隐私。 您应优先修复安全漏洞。 您的热更新作用范围不应过大。</description>
    </item>
    
  </channel>
</rss>
